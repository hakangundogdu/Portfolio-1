{"version":3,"sources":["assets/images/reactlogo.svg","styles/colors.js","styles/fonts.js","styles/themes.js","components/a-commons/Grid/GridBase.js","components/a-commons/Grid/GridCenter.js","utils/getStyledThemeProps.js","components/a-commons/Logo/Logo.js","components/a-commons/Text/index.js","components/a-commons/Layout/Window.js","components/h-home/Header.js","components/h-home/Nav.js","hooks/useWindowSize.js","components/h-home/Footer.js","pages/Home/Home.js","µ-app/App.js","µ-app/serviceWorker.js","index.js"],"names":["module","exports","colors","fonts","Mode","window","matchMedia","matches","useTheme","useContext","ThemeContext","Theme","children","useState","theme","setTheme","themes","dark","light","text","c","base","title","f","body","styled","div","Color","color","props","Font","font","rotate","keyframes","img","h1","p","Window","HeaderSubtitle","h5","HeaderName","h4","HeaderContainer","Header","onMouseEnter","NavLabel","NavNo","h6","NavLink","a","NavDash","NavContiner","animated","Nv","nav","org","mass","tension","friction","Nav","size","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","calc","x","useSpring","config","set","onMouseMove","clientX","style","transform","interpolate","href","FooterLinkText","FooterLink","FooterContainer","Footer","Home","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24d836f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactlogo.ff1c1ab9.svg\";","//https://colorhunt.co/palette/189745\n// export const colors = {\n//   white: '#eeeeee',\n//   turq: '#32e0c4',\n//   gray: '#393e46',\n//   black: '#222831',\n// };\n\nexport const colors = {\n  text: '#2c2a2a',\n  base: '#f2efe8',\n\n  dark: '#2c2a2a',\n  light: '#f2efe8',\n};\n","export const fonts = {\n  title: \"Radio Grotesk\",\n  body: \"Open Sans\"\n};","import React, { useState, useContext } from \"react\";\nimport { ThemeProvider, ThemeContext } from \"styled-components\";\nimport { colors as c } from './colors';\nimport { fonts as f } from './fonts';\n\nconst Mode = (\n  window.matchMedia &&\n  window.matchMedia('(prefers-color-scheme: dark)').matches\n) ? 'light' : 'dark';\n\nexport const useTheme = () => useContext(ThemeContext);\n\nconst Theme = ({ children }) => {\n  const [theme, setTheme] = useState(Mode)\n  return (\n    <ThemeProvider\n      theme={{\n        colors: (themes[theme]).colors,\n        fonts: (themes[theme]).fonts,\n        setTheme, dark: (themes[theme]).dark,\n        theme: theme\n      }}\n    >\n      {children}\n    </ThemeProvider>\n  )\n};\n\nexport default Theme;\nexport const themes = {\n  light: {\n    dark: false,\n    colors: {\n      text: c.dark,\n      base: c.light,\n    },\n    fonts: {\n      title: f.title,\n      body: f.body,\n    },\n  },\n  dark: {\n    dark: true,\n    colors: {\n      text: c.light,\n      base: c.dark,\n    },\n    fonts: {\n      title: f.title,\n      body: f.body,\n    },\n  },\n};\n\n// export const themes = {\n//   default: {\n//     dark: true,\n//     colors: {\n//       primary: c.turq,\n//       body: c.white,\n//       background: c.gray,\n//       base: c.black,\n//     },\n//     fonts: {\n//       title: f.title,\n//       body: f.body,\n//     },\n//   }\n// };","import React from 'react';\nimport styled from 'styled-components';\n\nexport const GridContainer = styled.div`\n  display: grid;\n`;\n\nexport const GridBase = ({ children, ...props }) => {\n  return (\n    <GridContainer {...props}>\n      {children}\n    </GridContainer>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const GridContainer = styled.div`\n  display: grid;\n  place-items: center;\n  min-height:100vh;\n`;\n\nexport const GridCenter = ({ children, ...props }) => {\n  return (\n    <GridContainer {...props}>\n      {children}\n    </GridContainer>\n  )\n}\n","export const Color = color => props => props.theme.colors[color];\nexport const Font = font => props => props.theme.fonts[font];\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Color } from 'utils';\nimport logo from 'assets/images/reactlogo.svg'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AnimatedLogo = styled.img`\n  color: ${Color('primary')};\n  border: none;\n  animation: ${rotate} infinite 20s linear;\n`;\n\nexport const Logo = (props) => {\n  return (\n    <div style={{ ...props.style }}>\n      <AnimatedLogo alt='logo' src={logo} height=\"200\" />\n    </div>\n  )\n}","import styled from 'styled-components';\nimport { Color, Font } from 'utils';\n\n//Titles\nexport const Brand = styled.h1`\nfont: normal bold 128px/156px ${Font('title')};\nfont-family: ${Font('title')};\ncolor: ${Color('primary')};\n`;\n\n//General\nexport const Body = styled.p`\nfont: normal normal 18px / 37px ${ Font('body')};\ncolor: ${ Color('body')};\n`;","import styled from 'styled-components';\n\nexport const Window = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  height: 100vh;\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: 1fr;\n  position: relative;\n  width: 100%;\n  perspective: 1000px;\n  overflow: hidden;\n  \n  transition: all .8s cubic-bezier(.77,0,.175,1);\n  background-color: ${props => props.theme.colors.base};\n  \n  &:-webkit-scrollbar {\n    width: 0;\n    background: 0 0;\n  }\n  @media (max-width: 768px ){\n  padding-top: 8vw;\n  height: 100%;\n  min-height: 100vh;\n  grid-auto-columns: 1fr;\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { Color, Font } from 'utils';\nimport { useTheme } from 'styles';\n\n\nconst HeaderSubtitle = styled.h5`\n  opacity: .5;\n  margin-top: 0;\n  font: normal 400 16px / 20px ${Font('title')};\n  text-transform: uppercase;\n  letter-spacing: 0;\n  margin-bottom: 0;\n  margin-block-start: 1.67em;\n  margin-block-end: 1.67em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n  color: ${Color('text')};\n  transition: all .8s cubic-bezier(.77,0,.175,1);\n\n`;\n\nconst HeaderName = styled.h4`\n  margin-bottom: 2vw;\n  margin-top: 0;\n  \n  font: normal 400 16px / 20px ${Font('title')};\n\n  text-transform: uppercase;\n  letter-spacing: 0;\n\n  line-height: 20px;\n  margin-block-start: 1.33em;\n  margin-block-end: 1.33em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n  color: ${Color('text')};\n  transition: all .8s cubic-bezier(.77,0,.175,1);\n`;\n\nconst HeaderContainer = styled.div`\n  justify-self: center;\n  padding-top: 4vw;\n  transform-origin: 0 0;\n  text-align: center;\n\n  grid-column-start: 1;\n  grid-column-end: 2;\n  align-self: start;\n  grid-row-start: 1;\n  grid-row-end: 2;\n  @media (max-width: 768px ){\n    padding-top: 8vw;\n    height: 100%;\n    }\n`;\n\nexport const Header = () => {\n  const { setTheme } = useTheme();\n  return (\n    <HeaderContainer\n      onMouseEnter={() => setTheme('light')}\n    >\n      <HeaderName>\n        M Erkam Gundogdu\n      </HeaderName>\n      <HeaderSubtitle>\n        Frontend Developer & Scientist<br />at Reading, United Kingdom\n      </HeaderSubtitle>\n    </HeaderContainer >\n  )\n}\n","import React from 'react';\n//import React, { useState, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\nimport { Color, Font } from 'utils';\nimport { useTheme } from 'styles';\nimport { useWindowSize } from 'hooks/useWindowSize';\n\n// const rotate = keyframes`\n//   0% {\n//     transform: translateY(0);\n//     transform-origin: 50% 50%;\n//     text-shadow: none;\n//   }\n//   100% {\n//     transform: translateY(-50px);\n//     transform-origin: 50% 50%;\n//     text-shadow: 0 1px 0 #D0C3A9, 0 2px 0 #D0C3A9, 0 3px 0 #D0C3A9, 0 4px 0 #D0C3A9, 0 5px 0 #D0C3A9, 0 6px 0 #D0C3A9, 0 7px 0 #D0C3A9, 0 8px 0 #D0C3A9, 0 9px 0 #D0C3A9, 0 50px 30px rgba(0, 0, 0, 0.3);\n//   }\n// `;\nconst NavLabel = styled.div`\n  font: normal bold 15vw/1em ${Font('title')};\n  text-transform: uppercase;\n  transition: letter-spacing .8s cubic-bezier(.77,0,.175,1);\n  transition: font-size .5s cubic-bezier(.77,0,.175,1);\n  font-weight: 700;\n opacity:1;\n  &:hover {\n    //letter-spacing: -0.03em;\n    //font-size: 16vw;\n    /* transition: letter-spacing .8s cubic-bezier(.77,0,.175,1);\n    transition: font-size .8s cubic-bezier(.77,0,.175,1); */\n\n  }\n  /* @media (max-width: 768px ){\n\n  } */\n\n`;\nconst NavNo = styled.h6`\n  font: normal bold 12px/20px ${Font('title')};\n  margin-top: 2.6vw;\n  margin-right: auto;\n  margin-left: .25vw;\n  font-weight: 500;\n \n  &:hover {\n  letter-spacing: -.02em;}\n  margin-block-start: 2.33em;\n  margin-block-end: 2.33em;\n\n`;\n\nconst NavLink = styled.a`\n  color: ${Color('text')};\n  cursor: pointer;\n  display: flex;\n  padding-top: 1vw;\n  text-decoration: none;\n  align-items: flex-start;\n  justify-content: flex-start;\n  opacity:0.6;\n  max-width: 100%;\n  filter: blur(5px);\n  transition: all .8s cubic-bezier(.77,0,.175,1);\n  &:hover {\n  /* //animation:  1s cubic-bezier(0.250, 0.460, 0.450, 0.940) both; */\n  opacity:1;    \n  filter: blur(0px);\n\n  }\n  @media (max-width: 768px ){\n    opacity:1;\n    position: relative;\n    left: 1.5vw;\n    margin-right: auto;\n    margin-left: auto;\n    flex-direction: row;\n    -webkit-box-orient: horizontal;\n    align-self: stretch;\n  }\n`;\nconst NavDash = styled.div`\n  margin-top: 8vw;\n  margin-bottom: 8vw;\n  width: 4vw;\n  height: 2px;\n  margin-right: 5vw;\n  margin-left: 5vw;\n  background-color: ${Color('text')};\n  opacity:0.5;\n  @media (max-width: 768px ){\n    width: 80vw;\n    height: 1px;\n    margin: 5vw 0;\n  }\n\n`;\nconst NavContiner = styled(animated.div)`\n  transform-style: preserve-3d;\n  will-change: transform;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  perspective: 1000px;\n  background-attachment: scroll!important;\n  /* &:hover {\n  opacity:0.5;\n  } */\n  @media (max-width: 768px ){\n   flex-direction: column;\n   -webkit-box-orient: vertical;\n  }\n\n`;\nconst Nv = styled.nav`\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 2;\n  grid-row-end: 3;  \n  align-self: center;\n  \n  display: block;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  perspective: 1000px;\n  overflow: hidden;\n\n  opacity: 1;\n  transform: translate3d(-50%, -50%, 0px) scale3d(1, 1, 1) rotateX(0deg) rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);\n  transform-style: preserve-3d;\n  @media (max-width: 768px ){\n    padding-left: 0;\n  }\n`;\n// const org0 = { mass: 10, tension: 550, friction: 140 }\n// const fast = { tension: 1200, friction: 40 }\n// const slow = { mass: 10, tension: 200, friction: 50 }\nconst org = { mass: 20, tension: 550, friction: 140 }\nexport const Nav = () => {\n  //const ref = useRef();\n  //scale3d(${((1 + (((Math.abs(x)) + 2) / 50))) }, 1, 1)\n  const size = useWindowSize();\n  const { setTheme } = useTheme();\n  const calc = (x) => 45 - ((x / window.innerWidth) * 90);\n  const trans = (x) => `translate3d(${x}%, 0%, 0px)\n   `\n  //  const trans = (x) => `translate3d(${x}%, 0%, 0px) rotateY(${-x / 10}deg) \n  //  skew(${-x / 20}deg, ${x / 30}deg)\n  //   `\n  const [props, set] = useSpring(() => ({ x: 0, config: org }))\n\n  return (\n    <Nv>\n      <NavContiner\n        //ref={ref}\n        onMouseEnter={() => setTheme('dark')}\n        onMouseMove={({ clientX: x }) => set({ x: calc(x) })}\n        style={(size.width > 768) ?\n          { transform: props.x.interpolate(trans) } : { transform: 'null' }} >\n        <NavLink href=\"about/\">\n          <NavLabel>About</NavLabel>\n          <NavNo>01</NavNo></NavLink>\n        <NavDash />\n        <NavLink href=\"work/\" >\n          <NavLabel>Work</NavLabel>\n          <NavNo>02</NavNo></NavLink>\n        <NavDash />\n        <NavLink href=\"contact/\">\n          <NavLabel>Contact</NavLabel>\n          <NavNo>03</NavNo></NavLink>\n      </NavContiner>\n    </Nv >\n  )\n};","import { useState, useEffect } from 'react';\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Color, Font } from 'utils';\nimport { useTheme } from 'styles';\n\nconst FooterLinkText = styled.h4`\n  margin-bottom: 2vw;\n\n  margin-top: 0;\n  font: normal 400 16px / 20px ${Font('title')};\n  text-transform: uppercase;\n  letter-spacing: 0;\n  margin-block-start: 1.67em;\n  margin-block-end: 1.67em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n  color: ${Color('text')};\n  transition: all .8s cubic-bezier(.77,0,.175,1);\n`;\n\nconst FooterLink = styled.a`\n  padding: 20px;\n  -webkit-transition: opacity .5s ease;\n  transition: opacity .5s ease;\n  text-decoration: none;\n  text-transform: uppercase;\n  max-width: 100%;\n  cursor: pointer;\n`;\n\nconst FooterContainer = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 3;\n  grid-row-end: 4;\n  justify-self: center;\n  align-self: end;\n  display: flex;\n\npadding-bottom: 4vw;\ntransform-origin: 0 0;\n`;\n\nexport const Footer = () => {\n  const { setTheme } = useTheme();\n  return (\n    <FooterContainer\n      onMouseEnter={() => setTheme('light')}\n    >\n      <FooterLink\n        href=\"https://github.com/mgunsd\">\n        <FooterLinkText>\n          GitHub\n      </FooterLinkText>\n      </FooterLink>\n      <FooterLink\n        href=\"https://www.linkedin.com/in/mark-gun/\">\n        <FooterLinkText>\n          LinkedIn\n      </FooterLinkText>\n      </FooterLink>\n    </FooterContainer >\n  )\n}\n","import React from 'react';\nimport { Window } from 'components/a-commons';\nimport { Header, Nav, Footer } from 'components/h-home';\n\nexport const Home = () => {\n  return (\n    <Window>\n      <Header />\n      <Nav />\n      <Footer />\n    </Window >\n  )\n}","import React from 'react';\nimport 'styles/m-normalize.css';\nimport Theme from 'styles/themes';\nimport { Home } from 'pages/Home';\n\nconst App = () => <Theme><Home /></Theme >\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './µ-app/App';\nimport * as serviceWorker from './µ-app/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}